on:
  push:
    branches-ignore:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

env:
  IMAGE_NAME: ets-anno-platform-backend

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v2

      - name: Log into Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Build New Images
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_ID=docker.pkg.github.com/$(echo "${REPO_NAME}")/$(echo "${IMAGE_NAME}")
          docker pull "${IMAGE_ID}:latest" || true
          docker pull "${IMAGE_ID}:latest-dev" || true
          echo Using cache: ${IMAGE_ID}:latest
          docker build --cache-from ${IMAGE_ID}:latest -t image --target app .
          echo Using cache: ${IMAGE_ID}:latest-dev
          docker build --cache-from ${IMAGE_ID}:latest-dev -t image-dev --target dev .
      
      - name: Code Health
        run: docker run image-dev poetry run python -m pytest --mypy --flake8 --isort --black backend/

      - name: Tests
        run: docker-compose -p tests-${{ github.run_id }} -f tests/docker-compose.yml up --exit-code-from app
